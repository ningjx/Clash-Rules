name: Pull_blackmatrix7_Rules

on:
  schedule:
    - cron: "0 16 * * *"
  workflow_dispatch:

jobs:
  generate_rules:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    defaults:
      run:
        shell: bash
    env:
      urls: |
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AmazonPrimeVideo/AmazonPrimeVideo.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hulu/Hulu.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list

      microsoft_direct: |
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/MicrosoftEdge/MicrosoftEdge.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Microsoft/Microsoft.list
        https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Bing/Bing.list

      proxy: https://mirror.ning.host
    
    steps:
      - name: Set_Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Shanghai"
        
      - name: git_init
        run: |
          git init
          git config --local user.name "github-actions"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --global init.defaultBranch master
          git pull "https://github.com/${{ github.repository }}"

      - name: make_dir
        run: |
          mkdir -p auto_generate
          mkdir -p temp

      - name: Generate Files
        run: |
          sed -n '/#自动生成代理BEGIN/q;p' ClashConfigTemp.yaml > ./temp/temp1.txt
          echo "#自动生成代理BEGIN" >> ./temp/temp1.txt
          sed -n '/#自动生成代理END/,/#自动生成规则BEGIN/p' ClashConfigTemp.yaml > ./temp/temp3.txt
          sed -n '/#自动生成规则END/,/#自动生成分流规则BEGIN/p' ClashConfigTemp.yaml > ./temp/temp5.txt
          sed -n '/^#自动生成分流规则END/,${p}' ClashConfigTemp.yaml > ./temp/temp7.txt
          #touch ./temp/temp2.txt #代理
          #touch ./temp/temp4.txt #规则集
          #touch ./temp/temp6.txt #分流规则

          for url in $urls; do
            filename=$(basename $url)
            purename="${filename%.*}"  #去掉文件后缀.list
            echo "当前文件{$filename}"

            #从URL获取并转换规则
            response=$(curl -s -o /dev/null -w "%{http_code}" $url)
            if [ $response -eq 200 ]; then
              wget -O ./temp/$purename $url 
              cat ./temp/$purename | grep  '^#' > "./auto_generate/${purename}.yaml" #写入注释
              echo "payload:" >> "./auto_generate/${purename}.yaml"
              #暂时去掉IP-ASN类型规则,兼容旧版本Clash内核
              cat ./temp/$purename | grep -v '^#' | grep -v 'IP-ASN' | awk '{printf "  - %s\n", $1}' >> "./auto_generate/${purename}.yaml"
            else
              echo "${purename}规则链接 ${url} 失效,保持文件不变"
            fi
            
            #写入节点
            echo "  - name: ${purename}" >> ./temp/temp2.txt
            echo "    type: select" >> ./temp/temp2.txt
            echo "    proxies:" >> ./temp/temp2.txt
            echo "      - 默认节点" >> ./temp/temp2.txt
            echo "      - 最快节点" >> ./temp/temp2.txt
            echo "{ProxiesNames}" >> ./temp/temp2.txt
            echo "      - DIRECT" >> ./temp/temp2.txt
            #写入规则链接
            echo "  ${purename}:" >> ./temp/temp4.txt
            echo "    type: http" >> ./temp/temp4.txt
            echo "    behavior: classical" >> ./temp/temp4.txt
            echo "    url: $proxy/https://raw.githubusercontent.com/ningjx/Clash-Rules/master/auto_generate/${purename}.yaml" >> ./temp/temp4.txt
            echo "    path: \"./rule_provider/${purename}.yaml\"" >> ./temp/temp4.txt
            echo "    interval: 86400" >> ./temp/temp4.txt
            #写入分流规则
            echo "  - RULE-SET,${purename},${purename}" >> ./temp/temp6.txt
          done

          for ms_url in $microsoft_direct; do
            filename=$(basename $ms_url)
            purename="Microsoft"
            first=1
            #从URL获取并转换规则
            response=$(curl -s -o /dev/null -w "%{http_code}" $ms_url)
            if [ $response -eq 200 ]; then
              wget -O ./temp/$purename $ms_url 
              if [ $first -eq 1]; then
                echo "payload:" >> "./auto_generate/${purename}.yaml"
                $first=0

              #暂时去掉IP-ASN类型规则,兼容旧版本Clash内核
              cat ./temp/$purename | grep -v '^#' | grep -v 'IP-ASN' | awk '{printf "  - %s\n", $1}' >> "./auto_generate/${purename}.yaml"
            else
              echo "${purename}规则链接 ${ms_url} 失效,保持文件不变"
            fi
            #写入节点
            echo "  - name: ${purename}" >> ./temp/temp2.txt
            echo "    type: select" >> ./temp/temp2.txt
            echo "    proxies:" >> ./temp/temp2.txt
            echo "      - DIRECT" >> ./temp/temp2.txt
            echo "      - 默认节点" >> ./temp/temp2.txt
            echo "      - 最快节点" >> ./temp/temp2.txt
            echo "{ProxiesNames}" >> ./temp/temp2.txt
            #写入规则链接
            echo "  ${purename}:" >> ./temp/temp4.txt
            echo "    type: http" >> ./temp/temp4.txt
            echo "    behavior: classical" >> ./temp/temp4.txt
            echo "    url: $proxy/https://raw.githubusercontent.com/ningjx/Clash-Rules/master/auto_generate/${purename}.yaml" >> ./temp/temp4.txt
            echo "    path: \"./rule_provider/${purename}.yaml\"" >> ./temp/temp4.txt
            echo "    interval: 86400" >> ./temp/temp4.txt
            #写入分流规则
            echo "  - RULE-SET,${purename},${purename}" >> ./temp/temp6.txt
          done

          #重新生成ClashConfigTemp
          cat ./temp/temp1.txt > ClashConfigTemp.yaml
          cat ./temp/temp2.txt >> ClashConfigTemp.yaml
          cat ./temp/temp3.txt >> ClashConfigTemp.yaml
          cat ./temp/temp4.txt >> ClashConfigTemp.yaml
          cat ./temp/temp5.txt >> ClashConfigTemp.yaml
          cat ./temp/temp6.txt >> ClashConfigTemp.yaml
          cat ./temp/temp7.txt >> ClashConfigTemp.yaml

          #删除所有临时文件
          ls ./temp
          rm -r ./temp
          
      - name: Commit
        run: |
          if test ! -z "$(git status -s)"; then
            git add .
            git commit -m "Generate on $(date +%Y%m%d%H%M)"
            git remote add origin "https://${{ github.actor }}:${{ secrets.action_token }}@github.com/${{ github.repository }}"
            git push origin master
          else
            echo "Nothing was changed."
          fi
